@using CompanhiadoCacau.Extensions

@model IEnumerable<CompanhiadoCacau.Models.Cliente>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataNascimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CPF)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Telefone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNascimento)
                </td>
                <td>
                    <!-- Exibindo o CPF com formatação -->
                    @if (!string.IsNullOrWhiteSpace(item.CPF))
                    {
                        @item.CPF.FormatarCpf() <!-- Chamando o método de extensão para formatar o CPF -->
                    }
                    else
                    {
                        @:CPF inválido <!-- Exibindo "CPF inválido" caso o CPF seja nulo ou vazio -->
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <!-- Exibindo o telefone com formatação -->
                    @if (!string.IsNullOrWhiteSpace(item.Telefone))
                    {
                        @item.Telefone.FormatarTelefone() <!-- Chamando o método de extensão para formatar o telefone -->
                    }
                    else
                    {
                        @:Telefone inválido <!-- Exibindo "Telefone inválido" caso o telefone seja nulo ou vazio -->
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Endereco.Bairro)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ClienteId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ClienteId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ClienteId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
